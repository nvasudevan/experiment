%token EOF, NONE, ERROR, FIRST_KEYWORD, ABSTRACT, AS, ADD, BASE, BOOL, BREAK, BYTE, CASE, CATCH, CHAR, CHECKED, CLASS, CONST, CONTINUE, DECIMAL, DEFAULT, DELEGATE, DO, DOUBLE, ELSE, ENUM, EVENT, EXPLICIT, EXTERN, FALSE, FINALLY, FIXED, FLOAT, FOR, FOREACH, GOTO, IF, IMPLICIT, IN, INT, INTERFACE, INTERNAL, IS, LOCK, LONG, NAMESPACE, NEW, NULL, OBJECT, OPERATOR, OUT, OVERRIDE, PARAMS, PRIVATE, PROTECTED, PUBLIC, READONLY, REF, RETURN, REMOVE, SBYTE, SEALED, SHORT, SIZEOF, STACKALLOC, STATIC, STRING, STRUCT, SWITCH, THIS, THROW, TRUE, TRY, TYPEOF, UINT, ULONG, UNCHECKED, UNSAFE, USHORT, USING, VIRTUAL, VOID, VOLATILE, WHERE, WHILE, ARGLIST, PARTIAL, ARROW, FROM, FROM_FIRST, JOIN, ON, EQUALS, SELECT, GROUP, BY, LET, ORDERBY, ASCENDING, DESCENDING, INTO, INTERR_NULLABLE, EXTERN_ALIAS, REFVALUE, REFTYPE, MAKEREF, ASYNC, AWAIT, GET, SET, OPEN_BRACE, CLOSE_BRACE, OPEN_BRACKET, CLOSE_BRACKET, OPEN_PARENS, CLOSE_PARENS, DOT, COMMA, COLON, SEMICOLON, TILDE, PLUS, MINUS, BANG, ASSIGN, OP_LT, OP_GT, BITWISE_AND, BITWISE_OR, STAR, PERCENT, DIV, CARRET, INTERR, DOUBLE_COLON, OP_INC, OP_DEC, OP_SHIFT_LEFT, OP_SHIFT_RIGHT, OP_LE, OP_GE, OP_EQ, OP_NE, OP_AND, OP_OR, OP_MULT_ASSIGN, OP_DIV_ASSIGN, OP_MOD_ASSIGN, OP_ADD_ASSIGN, OP_SUB_ASSIGN, OP_SHIFT_LEFT_ASSIGN, OP_SHIFT_RIGHT_ASSIGN, OP_AND_ASSIGN, OP_XOR_ASSIGN, OP_OR_ASSIGN, OP_PTR, OP_COALESCING, OP_GENERICS_LT, OP_GENERICS_LT_DECL, OP_GENERICS_GT, LITERAL, IDENTIFIER, OPEN_PARENS_LAMBDA, OPEN_PARENS_CAST, GENERIC_DIMENSION, DEFAULT_COLON, OPEN_BRACKET_EXPR, EVAL_STATEMENT_PARSER, EVAL_COMPILATION_UNIT_PARSER, EVAL_USING_DECLARATIONS_UNIT_PARSER, DOC_SEE, GENERATE_COMPLETION, COMPLETE_COMPLETION;

%nodefault

compilation_unit : outer_declaration opt_EOF | interactive_parsing opt_EOF | documentation_parsing
;
outer_declaration : opt_extern_alias_directives opt_using_directives | opt_extern_alias_directives opt_using_directives namespace_or_type_declarations opt_attributes | opt_extern_alias_directives opt_using_directives attribute_sections
;
opt_EOF :  | EOF
;
extern_alias_directives : extern_alias_directive | extern_alias_directives extern_alias_directive
;
extern_alias_directive : EXTERN_ALIAS IDENTIFIER IDENTIFIER SEMICOLON
;
using_directives : using_directive | using_directives using_directive
;
using_directive : using_namespace
;
using_namespace : USING namespace_or_type_expr SEMICOLON | USING IDENTIFIER ASSIGN namespace_or_type_expr SEMICOLON
;
namespace_declaration : opt_attributes NAMESPACE namespace_name OPEN_BRACE opt_extern_alias_directives opt_using_directives opt_namespace_or_type_declarations CLOSE_BRACE opt_semicolon_error | opt_attributes NAMESPACE namespace_name
;
opt_semicolon_error :  | SEMICOLON
;
namespace_name : IDENTIFIER | namespace_name DOT IDENTIFIER
;
opt_semicolon :  | SEMICOLON
;
opt_comma :  | COMMA
;
opt_using_directives :  | using_directives
;
opt_extern_alias_directives :  | extern_alias_directives
;
opt_namespace_or_type_declarations :  | namespace_or_type_declarations
;
namespace_or_type_declarations : namespace_or_type_declaration | namespace_or_type_declarations namespace_or_type_declaration
;
namespace_or_type_declaration : type_declaration | namespace_declaration | attribute_sections CLOSE_BRACE
;
type_declaration : class_declaration | struct_declaration | interface_declaration | enum_declaration | delegate_declaration
;
opt_attributes :  | attribute_sections
;
attribute_sections : attribute_section | attribute_sections attribute_section
;
attribute_section : OPEN_BRACKET attribute_section_cont
;
attribute_section_cont : attribute_target COLON attribute_list opt_comma CLOSE_BRACKET | attribute_list opt_comma CLOSE_BRACKET
;
attribute_target : IDENTIFIER | EVENT | RETURN
;
attribute_list : attribute | attribute_list COMMA attribute
;
attribute : attribute_name opt_attribute_arguments
;
attribute_name : namespace_or_type_expr
;
opt_attribute_arguments :  | OPEN_PARENS attribute_arguments CLOSE_PARENS
;
attribute_arguments :  | positional_or_named_argument | attribute_arguments COMMA positional_or_named_argument
;
positional_or_named_argument : expression | named_argument
;
named_argument : identifier_inside_body COLON opt_named_modifier expression_or_error
;
opt_named_modifier :  | REF | OUT
;
opt_class_member_declarations :  | class_member_declarations
;
class_member_declarations : class_member_declaration | class_member_declarations class_member_declaration
;
class_member_declaration : constant_declaration | field_declaration | method_declaration | property_declaration | event_declaration | indexer_declaration | operator_declaration | constructor_declaration | destructor_declaration | type_declaration | attributes_without_members | incomplete_member
;
struct_declaration : opt_attributes opt_modifiers opt_partial STRUCT type_declaration_name opt_class_base opt_type_parameter_constraints_clauses OPEN_BRACE opt_class_member_declarations CLOSE_BRACE opt_semicolon
;
constant_declaration : opt_attributes opt_modifiers CONST type IDENTIFIER constant_initializer opt_constant_declarators SEMICOLON
;
opt_constant_declarators :  | constant_declarators
;
constant_declarators : constant_declarator | constant_declarators constant_declarator
;
constant_declarator : COMMA IDENTIFIER constant_initializer
;
constant_initializer : ASSIGN constant_initializer_expr
;
constant_initializer_expr : constant_expression | array_initializer
;
field_declaration : opt_attributes opt_modifiers member_type IDENTIFIER opt_field_initializer opt_field_declarators SEMICOLON | opt_attributes opt_modifiers FIXED simple_type IDENTIFIER fixed_field_size opt_fixed_field_declarators SEMICOLON
;
opt_field_initializer :  | ASSIGN variable_initializer
;
opt_field_declarators :  | field_declarators
;
field_declarators : field_declarator | field_declarators field_declarator
;
field_declarator : COMMA IDENTIFIER | COMMA IDENTIFIER ASSIGN variable_initializer
;
opt_fixed_field_declarators :  | fixed_field_declarators
;
fixed_field_declarators : fixed_field_declarator | fixed_field_declarators fixed_field_declarator
;
fixed_field_declarator : COMMA IDENTIFIER fixed_field_size
;
fixed_field_size : OPEN_BRACKET expression CLOSE_BRACKET
;
variable_initializer : expression | array_initializer
;
method_declaration : method_header method_body
;
method_header : opt_attributes opt_modifiers member_type method_declaration_name OPEN_PARENS opt_formal_parameter_list CLOSE_PARENS opt_type_parameter_constraints_clauses | opt_attributes opt_modifiers PARTIAL VOID method_declaration_name OPEN_PARENS opt_formal_parameter_list CLOSE_PARENS opt_type_parameter_constraints_clauses | opt_attributes opt_modifiers member_type modifiers method_declaration_name OPEN_PARENS opt_formal_parameter_list CLOSE_PARENS
;
method_body : block | SEMICOLON
;
opt_formal_parameter_list :  | formal_parameter_list
;
formal_parameter_list : fixed_parameters | fixed_parameters COMMA parameter_array | fixed_parameters COMMA arglist_modifier | parameter_array | arglist_modifier
;
fixed_parameters : fixed_parameter | fixed_parameters COMMA fixed_parameter
;
fixed_parameter : opt_attributes opt_parameter_modifier parameter_type identifier_inside_body | opt_attributes opt_parameter_modifier parameter_type identifier_inside_body OPEN_BRACKET CLOSE_BRACKET | opt_attributes opt_parameter_modifier parameter_type identifier_inside_body ASSIGN constant_expression
;
opt_parameter_modifier :  | parameter_modifiers
;
parameter_modifiers : parameter_modifier | parameter_modifiers parameter_modifier
;
parameter_modifier : REF | OUT | THIS
;
parameter_array : opt_attributes params_modifier type IDENTIFIER | opt_attributes params_modifier type IDENTIFIER ASSIGN constant_expression
;
params_modifier : PARAMS | PARAMS parameter_modifier | PARAMS params_modifier
;
arglist_modifier : ARGLIST
;
property_declaration : opt_attributes opt_modifiers member_type member_declaration_name OPEN_BRACE accessor_declarations CLOSE_BRACE
;
indexer_declaration : opt_attributes opt_modifiers member_type indexer_declaration_name OPEN_BRACKET opt_formal_parameter_list CLOSE_BRACKET OPEN_BRACE accessor_declarations CLOSE_BRACE
;
accessor_declarations : get_accessor_declaration | get_accessor_declaration accessor_declarations | set_accessor_declaration | set_accessor_declaration accessor_declarations
;
get_accessor_declaration : opt_attributes opt_modifiers GET accessor_body
;
set_accessor_declaration : opt_attributes opt_modifiers SET accessor_body
;
accessor_body : block | SEMICOLON
;
interface_declaration : opt_attributes opt_modifiers opt_partial INTERFACE type_declaration_name opt_class_base opt_type_parameter_constraints_clauses OPEN_BRACE opt_interface_member_declarations CLOSE_BRACE opt_semicolon
;
opt_interface_member_declarations :  | interface_member_declarations
;
interface_member_declarations : interface_member_declaration | interface_member_declarations interface_member_declaration
;
interface_member_declaration : constant_declaration | field_declaration | method_declaration | property_declaration | event_declaration | indexer_declaration | operator_declaration | constructor_declaration | type_declaration
;
operator_declaration : opt_attributes opt_modifiers operator_declarator operator_body
;
operator_body : block | SEMICOLON
;
operator_type : type_expression_or_array | VOID
;
operator_declarator : operator_type OPERATOR overloadable_operator OPEN_PARENS opt_formal_parameter_list CLOSE_PARENS | conversion_operator_declarator
;
overloadable_operator : BANG | TILDE | OP_INC | OP_DEC | TRUE | FALSE | PLUS | MINUS | STAR | DIV | PERCENT | BITWISE_AND | BITWISE_OR | CARRET | OP_SHIFT_LEFT | OP_SHIFT_RIGHT | OP_EQ | OP_NE | OP_GT | OP_LT | OP_GE | OP_LE
;
conversion_operator_declarator : IMPLICIT OPERATOR type OPEN_PARENS opt_formal_parameter_list CLOSE_PARENS | EXPLICIT OPERATOR type OPEN_PARENS opt_formal_parameter_list CLOSE_PARENS
;
constructor_declaration : constructor_declarator constructor_body
;
constructor_declarator : opt_attributes opt_modifiers IDENTIFIER OPEN_PARENS opt_formal_parameter_list CLOSE_PARENS opt_constructor_initializer
;
constructor_body : block_prepared | SEMICOLON
;
opt_constructor_initializer :  | constructor_initializer
;
constructor_initializer : COLON BASE OPEN_PARENS opt_argument_list CLOSE_PARENS | COLON THIS OPEN_PARENS opt_argument_list CLOSE_PARENS
;
destructor_declaration : opt_attributes opt_modifiers TILDE IDENTIFIER OPEN_PARENS CLOSE_PARENS method_body
;
event_declaration : opt_attributes opt_modifiers EVENT type member_declaration_name opt_event_initializer opt_event_declarators SEMICOLON | opt_attributes opt_modifiers EVENT type member_declaration_name OPEN_BRACE event_accessor_declarations CLOSE_BRACE
;
opt_event_initializer :  | ASSIGN event_variable_initializer
;
opt_event_declarators :  | event_declarators
;
event_declarators : event_declarator | event_declarators event_declarator
;
event_declarator : COMMA IDENTIFIER | COMMA IDENTIFIER ASSIGN event_variable_initializer
;
event_variable_initializer : variable_initializer
;
event_accessor_declarations : add_accessor_declaration remove_accessor_declaration | remove_accessor_declaration add_accessor_declaration | add_accessor_declaration | remove_accessor_declaration
;
add_accessor_declaration : opt_attributes opt_modifiers ADD event_accessor_block
;
remove_accessor_declaration : opt_attributes opt_modifiers REMOVE event_accessor_block
;
event_accessor_block : opt_semicolon | block
;
attributes_without_members : attribute_sections CLOSE_BRACE
;
incomplete_member : opt_attributes opt_modifiers member_type CLOSE_BRACE
;
enum_declaration : opt_attributes opt_modifiers ENUM type_declaration_name opt_enum_base OPEN_BRACE opt_enum_member_declarations CLOSE_BRACE opt_semicolon
;
opt_enum_base :  | COLON type
;
opt_enum_member_declarations :  | enum_member_declarations | enum_member_declarations COMMA
;
enum_member_declarations : enum_member_declaration | enum_member_declarations COMMA enum_member_declaration
;
enum_member_declaration : opt_attributes IDENTIFIER | opt_attributes IDENTIFIER ASSIGN constant_expression | attributes_without_members
;
delegate_declaration : opt_attributes opt_modifiers DELEGATE member_type type_declaration_name OPEN_PARENS opt_formal_parameter_list CLOSE_PARENS opt_type_parameter_constraints_clauses SEMICOLON
;
opt_nullable :  | INTERR_NULLABLE
;
namespace_or_type_expr : member_name | qualified_alias_member IDENTIFIER opt_type_argument_list
;
member_name : simple_name_expr | namespace_or_type_expr DOT IDENTIFIER opt_type_argument_list
;
simple_name_expr : IDENTIFIER opt_type_argument_list
;
opt_type_argument_list :  | OP_GENERICS_LT type_arguments OP_GENERICS_GT
;
type_arguments : type | type_arguments COMMA type
;
type_declaration_name : IDENTIFIER opt_type_parameter_list
;
member_declaration_name : method_declaration_name
;
method_declaration_name : type_declaration_name | explicit_interface IDENTIFIER opt_type_parameter_list
;
indexer_declaration_name : THIS | explicit_interface THIS
;
explicit_interface : IDENTIFIER opt_type_argument_list DOT | qualified_alias_member IDENTIFIER opt_type_argument_list DOT | explicit_interface IDENTIFIER opt_type_argument_list DOT
;
opt_type_parameter_list :  | OP_GENERICS_LT_DECL type_parameters OP_GENERICS_GT
;
type_parameters : type_parameter | type_parameters COMMA type_parameter
;
type_parameter : opt_attributes opt_type_parameter_variance IDENTIFIER
;
type_and_void : type_expression_or_array | VOID
;
member_type : type_and_void
;
type : type_expression_or_array | VOID
;
simple_type : type_expression | VOID
;
parameter_type : type_expression_or_array | VOID
;
type_expression_or_array : type_expression | type_expression rank_specifiers
;
type_expression : namespace_or_type_expr opt_nullable | namespace_or_type_expr pointer_stars | builtin_types opt_nullable | builtin_types pointer_stars | VOID pointer_stars
;
type_list : base_type_name | type_list COMMA base_type_name
;
base_type_name : opt_event_declarators
;
builtin_types : OBJECT | STRING | BOOL | DECIMAL | FLOAT | DOUBLE | integral_type
;
integral_type : SBYTE | BYTE | SHORT | USHORT | INT | UINT | LONG | ULONG | CHAR
;
primary_expression : primary_expression_or_type | literal | array_creation_expression | parenthesized_expression | default_value_expression | invocation_expression | element_access | this_access | base_access | post_increment_expression | post_decrement_expression | object_or_delegate_creation_expression | anonymous_type_expression | typeof_expression | sizeof_expression | checked_expression | unchecked_expression | pointer_member_access | anonymous_method_expression | undocumented_expressions
;
primary_expression_or_type : IDENTIFIER opt_type_argument_list | IDENTIFIER GENERATE_COMPLETION | member_access
;
literal : boolean_literal | LITERAL | NULL
;
boolean_literal : TRUE | FALSE
;
open_parens_any : OPEN_PARENS | OPEN_PARENS_CAST
;
close_parens : CLOSE_PARENS | COMPLETE_COMPLETION
;
parenthesized_expression : OPEN_PARENS expression CLOSE_PARENS | OPEN_PARENS expression COMPLETE_COMPLETION
;
member_access : primary_expression DOT identifier_inside_body opt_type_argument_list | builtin_types DOT identifier_inside_body opt_type_argument_list | BASE DOT identifier_inside_body opt_type_argument_list | qualified_alias_member identifier_inside_body opt_type_argument_list | primary_expression DOT GENERATE_COMPLETION | primary_expression DOT IDENTIFIER GENERATE_COMPLETION | builtin_types DOT GENERATE_COMPLETION | builtin_types DOT IDENTIFIER GENERATE_COMPLETION
;
invocation_expression : primary_expression open_parens_any opt_argument_list close_parens
;
opt_object_or_collection_initializer :  | object_or_collection_initializer
;
object_or_collection_initializer : OPEN_BRACE opt_member_initializer_list CLOSE_BRACE | OPEN_BRACE member_initializer_list COMMA CLOSE_BRACE
;
opt_member_initializer_list :  | member_initializer_list
;
member_initializer_list : member_initializer | member_initializer_list COMMA member_initializer
;
member_initializer : IDENTIFIER ASSIGN initializer_value | AWAIT ASSIGN initializer_value | GENERATE_COMPLETION | non_assignment_expression opt_COMPLETE_COMPLETION | OPEN_BRACE expression_list CLOSE_BRACE | OPEN_BRACE CLOSE_BRACE
;
initializer_value : expression | object_or_collection_initializer
;
opt_argument_list :  | argument_list
;
argument_list : argument_or_named_argument | argument_list COMMA argument | argument_list COMMA named_argument
;
argument : expression | non_simple_argument
;
argument_or_named_argument : argument | named_argument
;
non_simple_argument : REF variable_reference | OUT variable_reference | ARGLIST OPEN_PARENS argument_list CLOSE_PARENS | ARGLIST OPEN_PARENS CLOSE_PARENS
;
variable_reference : expression
;
element_access : primary_expression OPEN_BRACKET_EXPR expression_list_arguments CLOSE_BRACKET
;
expression_list : expression_or_error | expression_list COMMA expression_or_error
;
expression_list_arguments : expression_list_argument | expression_list_arguments COMMA expression_list_argument
;
expression_list_argument : expression | named_argument
;
this_access : THIS
;
base_access : BASE OPEN_BRACKET_EXPR expression_list_arguments CLOSE_BRACKET
;
post_increment_expression : primary_expression OP_INC
;
post_decrement_expression : primary_expression OP_DEC
;
object_or_delegate_creation_expression : NEW new_expr_type open_parens_any opt_argument_list CLOSE_PARENS opt_object_or_collection_initializer | NEW new_expr_type object_or_collection_initializer
;
array_creation_expression : NEW new_expr_type OPEN_BRACKET_EXPR expression_list CLOSE_BRACKET opt_rank_specifier opt_array_initializer | NEW new_expr_type rank_specifiers array_initializer | NEW rank_specifier array_initializer
;
new_expr_type : simple_type
;
anonymous_type_expression : NEW OPEN_BRACE anonymous_type_parameters_opt_comma CLOSE_BRACE
;
anonymous_type_parameters_opt_comma : anonymous_type_parameters_opt | anonymous_type_parameters COMMA
;
anonymous_type_parameters_opt :  | anonymous_type_parameters
;
anonymous_type_parameters : anonymous_type_parameter | anonymous_type_parameters COMMA anonymous_type_parameter
;
anonymous_type_parameter : identifier_inside_body ASSIGN variable_initializer | identifier_inside_body | member_access
;
opt_rank_specifier :  | rank_specifiers
;
rank_specifiers : rank_specifier | rank_specifier rank_specifiers
;
rank_specifier : OPEN_BRACKET CLOSE_BRACKET | OPEN_BRACKET dim_separators CLOSE_BRACKET
;
dim_separators : COMMA | dim_separators COMMA
;
opt_array_initializer :  | array_initializer
;
array_initializer : OPEN_BRACE CLOSE_BRACE | OPEN_BRACE variable_initializer_list opt_comma CLOSE_BRACE
;
variable_initializer_list : variable_initializer | variable_initializer_list COMMA variable_initializer
;
typeof_expression : TYPEOF open_parens_any typeof_type_expression CLOSE_PARENS
;
typeof_type_expression : type_and_void | unbound_type_name
;
unbound_type_name : identifier_inside_body generic_dimension | qualified_alias_member identifier_inside_body generic_dimension | unbound_type_name DOT identifier_inside_body | unbound_type_name DOT identifier_inside_body generic_dimension | namespace_or_type_expr DOT identifier_inside_body generic_dimension
;
generic_dimension : GENERIC_DIMENSION
;
qualified_alias_member : IDENTIFIER DOUBLE_COLON
;
sizeof_expression : SIZEOF open_parens_any type CLOSE_PARENS
;
checked_expression : CHECKED open_parens_any expression CLOSE_PARENS
;
unchecked_expression : UNCHECKED open_parens_any expression CLOSE_PARENS
;
pointer_member_access : primary_expression OP_PTR IDENTIFIER opt_type_argument_list
;
anonymous_method_expression : DELEGATE opt_anonymous_method_signature block | ASYNC DELEGATE opt_anonymous_method_signature block
;
opt_anonymous_method_signature :  | anonymous_method_signature
;
anonymous_method_signature : OPEN_PARENS opt_formal_parameter_list CLOSE_PARENS
;
default_value_expression : DEFAULT open_parens_any type CLOSE_PARENS
;
unary_expression : primary_expression | BANG prefixed_unary_expression | TILDE prefixed_unary_expression | OPEN_PARENS_CAST type CLOSE_PARENS prefixed_unary_expression | AWAIT prefixed_unary_expression
;
prefixed_unary_expression : unary_expression | PLUS prefixed_unary_expression | MINUS prefixed_unary_expression | OP_INC prefixed_unary_expression | OP_DEC prefixed_unary_expression | STAR prefixed_unary_expression | BITWISE_AND prefixed_unary_expression
;
multiplicative_expression : prefixed_unary_expression | multiplicative_expression STAR prefixed_unary_expression | multiplicative_expression DIV prefixed_unary_expression | multiplicative_expression PERCENT prefixed_unary_expression
;
additive_expression : multiplicative_expression | additive_expression PLUS multiplicative_expression | additive_expression MINUS multiplicative_expression | additive_expression AS type | additive_expression IS type
;
shift_expression : additive_expression | shift_expression OP_SHIFT_LEFT additive_expression | shift_expression OP_SHIFT_RIGHT additive_expression
;
relational_expression : shift_expression | relational_expression OP_LT shift_expression | relational_expression OP_GT shift_expression | relational_expression OP_LE shift_expression | relational_expression OP_GE shift_expression
;
equality_expression : relational_expression | equality_expression OP_EQ relational_expression | equality_expression OP_NE relational_expression
;
and_expression : equality_expression | and_expression BITWISE_AND equality_expression
;
exclusive_or_expression : and_expression | exclusive_or_expression CARRET and_expression
;
inclusive_or_expression : exclusive_or_expression | inclusive_or_expression BITWISE_OR exclusive_or_expression
;
conditional_and_expression : inclusive_or_expression | conditional_and_expression OP_AND inclusive_or_expression
;
conditional_or_expression : conditional_and_expression | conditional_or_expression OP_OR conditional_and_expression
;
null_coalescing_expression : conditional_or_expression | conditional_or_expression OP_COALESCING null_coalescing_expression
;
conditional_expression : null_coalescing_expression | null_coalescing_expression INTERR expression COLON expression | null_coalescing_expression INTERR expression COLON CLOSE_BRACE
;
assignment_expression : prefixed_unary_expression ASSIGN expression | prefixed_unary_expression OP_MULT_ASSIGN expression | prefixed_unary_expression OP_DIV_ASSIGN expression | prefixed_unary_expression OP_MOD_ASSIGN expression | prefixed_unary_expression OP_ADD_ASSIGN expression | prefixed_unary_expression OP_SUB_ASSIGN expression | prefixed_unary_expression OP_SHIFT_LEFT_ASSIGN expression | prefixed_unary_expression OP_SHIFT_RIGHT_ASSIGN expression | prefixed_unary_expression OP_AND_ASSIGN expression | prefixed_unary_expression OP_OR_ASSIGN expression | prefixed_unary_expression OP_XOR_ASSIGN expression
;
lambda_parameter_list : lambda_parameter | lambda_parameter_list COMMA lambda_parameter
;
lambda_parameter : parameter_modifier parameter_type identifier_inside_body | parameter_type identifier_inside_body | IDENTIFIER | AWAIT
;
opt_lambda_parameter_list :  | lambda_parameter_list
;
lambda_expression_body : expression | block
;
expression_or_error : expression
;
lambda_expression : IDENTIFIER ARROW lambda_expression_body | AWAIT ARROW lambda_expression_body | ASYNC identifier_inside_body ARROW lambda_expression_body | OPEN_PARENS_LAMBDA opt_lambda_parameter_list CLOSE_PARENS ARROW lambda_expression_body | ASYNC OPEN_PARENS_LAMBDA opt_lambda_parameter_list CLOSE_PARENS ARROW lambda_expression_body
;
expression : assignment_expression | non_assignment_expression
;
non_assignment_expression : conditional_expression | lambda_expression | query_expression | ARGLIST
;
undocumented_expressions : REFVALUE OPEN_PARENS non_assignment_expression COMMA type CLOSE_PARENS | REFTYPE open_parens_any expression CLOSE_PARENS | MAKEREF open_parens_any expression CLOSE_PARENS
;
constant_expression : expression
;
boolean_expression : expression
;
class_declaration : opt_attributes opt_modifiers opt_partial CLASS type_declaration_name opt_class_base opt_type_parameter_constraints_clauses OPEN_BRACE opt_class_member_declarations CLOSE_BRACE opt_semicolon
;
opt_partial :  | PARTIAL
;
opt_modifiers :  | modifiers
;
modifiers : modifier | modifiers modifier
;
modifier : NEW | PUBLIC | PROTECTED | INTERNAL | PRIVATE | ABSTRACT | SEALED | STATIC | READONLY | VIRTUAL | OVERRIDE | EXTERN | VOLATILE | UNSAFE | ASYNC
;
opt_class_base :  | COLON type_list
;
opt_type_parameter_constraints_clauses :  | type_parameter_constraints_clauses
;
type_parameter_constraints_clauses : type_parameter_constraints_clause | type_parameter_constraints_clauses type_parameter_constraints_clause
;
type_parameter_constraints_clause : WHERE IDENTIFIER COLON type_parameter_constraints
;
type_parameter_constraints : type_parameter_constraint | type_parameter_constraints COMMA type_parameter_constraint
;
type_parameter_constraint : type | NEW OPEN_PARENS CLOSE_PARENS | CLASS | STRUCT
;
opt_type_parameter_variance :  | type_parameter_variance
;
type_parameter_variance : OUT | IN
;
block : OPEN_BRACE opt_statement_list block_end
;
block_end : CLOSE_BRACE | COMPLETE_COMPLETION
;
block_prepared : OPEN_BRACE opt_statement_list CLOSE_BRACE
;
opt_statement_list :  | statement_list
;
statement_list : statement | statement_list statement
;
statement : block_variable_declaration | valid_declaration_statement | labeled_statement
;
interactive_statement_list : interactive_statement | interactive_statement_list interactive_statement
;
interactive_statement : block_variable_declaration | interactive_valid_declaration_statement | labeled_statement
;
valid_declaration_statement : valid_declaration_statement_1 | selection_statement | iteration_statement | lock_statement | using_statement | fixed_statement
;
valid_declaration_statement_1 : block | empty_statement | expression_statement | jump_statement | try_statement | checked_statement | unchecked_statement | unsafe_statement
;
interactive_valid_declaration_statement : block | empty_statement | interactive_expression_statement | selection_statement | iteration_statement | jump_statement | try_statement | checked_statement | unchecked_statement | lock_statement | using_statement | unsafe_statement | fixed_statement
;
embedded_statement : valid_declaration_statement | block_variable_declaration | labeled_statement
;
embedded_statement_if_else : valid_declaration_statement_1 | block_variable_declaration | identifier_inside_body COLON
;
empty_statement : SEMICOLON
;
labeled_statement : identifier_inside_body COLON statement
;
variable_type : variable_type_simple | variable_type_simple rank_specifiers
;
variable_type_simple : primary_expression_or_type opt_nullable | builtin_types opt_nullable | builtin_types pointer_stars | VOID pointer_stars | VOID
;
pointer_stars : pointer_star | pointer_star pointer_stars
;
pointer_star : STAR
;
identifier_inside_body : IDENTIFIER | AWAIT
;
block_variable_declaration : variable_type identifier_inside_body opt_local_variable_initializer opt_variable_declarators SEMICOLON | CONST variable_type identifier_inside_body const_variable_initializer opt_const_declarators SEMICOLON
;
opt_local_variable_initializer :  | ASSIGN block_variable_initializer
;
opt_variable_declarators :  | variable_declarators
;
opt_using_or_fixed_variable_declarators :  | variable_declarators
;
variable_declarators : variable_declarator | variable_declarators variable_declarator
;
variable_declarator : COMMA identifier_inside_body | COMMA identifier_inside_body ASSIGN block_variable_initializer
;
const_variable_initializer :  | ASSIGN constant_initializer_expr
;
opt_const_declarators :  | const_declarators
;
const_declarators : const_declarator | const_declarators const_declarator
;
const_declarator : COMMA identifier_inside_body ASSIGN constant_initializer_expr
;
block_variable_initializer : variable_initializer | STACKALLOC simple_type OPEN_BRACKET_EXPR expression CLOSE_BRACKET | STACKALLOC simple_type
;
expression_statement : statement_expression SEMICOLON | statement_expression COMPLETE_COMPLETION | statement_expression CLOSE_BRACE
;
interactive_expression_statement : interactive_statement_expression SEMICOLON | interactive_statement_expression COMPLETE_COMPLETION
;
statement_expression : expression
;
interactive_statement_expression : expression
;
selection_statement : if_statement | switch_statement
;
if_statement : IF open_parens_any boolean_expression CLOSE_PARENS embedded_statement_if_else | IF open_parens_any boolean_expression CLOSE_PARENS embedded_statement_if_else ELSE embedded_statement_if_else
;
switch_statement : SWITCH open_parens_any expression CLOSE_PARENS OPEN_BRACE opt_switch_sections CLOSE_BRACE
;
opt_switch_sections :  | switch_sections
;
switch_sections : switch_section | switch_sections switch_section
;
switch_section : switch_labels statement_list
;
switch_labels : switch_label | switch_labels switch_label
;
switch_label : CASE constant_expression COLON | DEFAULT_COLON
;
iteration_statement : while_statement | do_statement | for_statement | foreach_statement
;
while_statement : WHILE open_parens_any boolean_expression CLOSE_PARENS embedded_statement
;
do_statement : DO embedded_statement WHILE open_parens_any boolean_expression CLOSE_PARENS SEMICOLON
;
for_statement : FOR open_parens_any for_statement_cont
;
for_statement_cont : opt_for_initializer SEMICOLON for_condition_and_iterator_part embedded_statement
;
for_condition_and_iterator_part : opt_for_condition SEMICOLON for_iterator_part | opt_for_condition close_parens_close_brace
;
for_iterator_part : opt_for_iterator CLOSE_PARENS | opt_for_iterator CLOSE_BRACE
;
close_parens_close_brace : CLOSE_PARENS | CLOSE_BRACE
;
opt_for_initializer :  | for_initializer
;
for_initializer : variable_type identifier_inside_body opt_local_variable_initializer opt_variable_declarators | statement_expression_list
;
opt_for_condition :  | boolean_expression
;
opt_for_iterator :  | for_iterator
;
for_iterator : statement_expression_list
;
statement_expression_list : statement_expression | statement_expression_list COMMA statement_expression
;
foreach_statement : FOREACH open_parens_any type identifier_inside_body IN expression CLOSE_PARENS embedded_statement
;
jump_statement : break_statement | continue_statement | goto_statement | return_statement | throw_statement | yield_statement
;
break_statement : BREAK SEMICOLON
;
continue_statement : CONTINUE SEMICOLON
;
goto_statement : GOTO identifier_inside_body SEMICOLON | GOTO CASE constant_expression SEMICOLON | GOTO DEFAULT SEMICOLON
;
return_statement : RETURN opt_expression SEMICOLON
;
throw_statement : THROW opt_expression SEMICOLON
;
yield_statement : identifier_inside_body RETURN opt_expression SEMICOLON | identifier_inside_body BREAK SEMICOLON
;
opt_expression :  | expression
;
try_statement : TRY block catch_clauses | TRY block FINALLY block | TRY block catch_clauses FINALLY block
;
catch_clauses : catch_clause | catch_clauses catch_clause
;
opt_identifier :  | identifier_inside_body
;
catch_clause : CATCH block | CATCH open_parens_any type opt_identifier CLOSE_PARENS block_prepared
;
checked_statement : CHECKED block
;
unchecked_statement : UNCHECKED block
;
unsafe_statement : UNSAFE block
;
lock_statement : LOCK open_parens_any expression CLOSE_PARENS embedded_statement
;
fixed_statement : FIXED open_parens_any variable_type identifier_inside_body using_or_fixed_variable_initializer opt_using_or_fixed_variable_declarators CLOSE_PARENS embedded_statement
;
using_statement : USING open_parens_any variable_type identifier_inside_body using_initialization CLOSE_PARENS embedded_statement | USING open_parens_any expression CLOSE_PARENS embedded_statement
;
using_initialization : using_or_fixed_variable_initializer opt_using_or_fixed_variable_declarators
;
using_or_fixed_variable_initializer :  | ASSIGN variable_initializer
;
query_expression : first_from_clause query_body | nested_from_clause query_body | first_from_clause COMPLETE_COMPLETION | nested_from_clause COMPLETE_COMPLETION
;
first_from_clause : FROM_FIRST identifier_inside_body IN expression | FROM_FIRST type identifier_inside_body IN expression
;
nested_from_clause : FROM identifier_inside_body IN expression | FROM type identifier_inside_body IN expression
;
from_clause : FROM identifier_inside_body IN expression_or_error | FROM type identifier_inside_body IN expression_or_error
;
query_body : query_body_clauses query_body_tail | query_body_tail | query_body_clauses COMPLETE_COMPLETION
;
query_body_tail : select_or_group_clause opt_query_continuation
;
select_or_group_clause : SELECT expression_or_error | GROUP expression_or_error by_expression
;
by_expression : BY expression_or_error
;
query_body_clauses : query_body_clause | query_body_clauses query_body_clause
;
query_body_clause : from_clause | let_clause | where_clause | join_clause | orderby_clause
;
let_clause : LET identifier_inside_body ASSIGN expression_or_error
;
where_clause : WHERE expression_or_error
;
join_clause : JOIN identifier_inside_body IN expression_or_error ON expression_or_error EQUALS expression_or_error opt_join_into | JOIN type identifier_inside_body IN expression_or_error ON expression_or_error EQUALS expression_or_error opt_join_into
;
opt_join_into :  | INTO identifier_inside_body
;
orderby_clause : ORDERBY orderings
;
orderings : order_by | order_by COMMA orderings_then_by
;
orderings_then_by : then_by | orderings_then_by COMMA then_by
;
order_by : expression | expression ASCENDING | expression DESCENDING
;
then_by : expression | expression ASCENDING | expression DESCENDING
;
opt_query_continuation : INTO identifier_inside_body query_body
;
interactive_parsing : EVAL_STATEMENT_PARSER EOF | EVAL_USING_DECLARATIONS_UNIT_PARSER using_directives opt_COMPLETE_COMPLETION | EVAL_STATEMENT_PARSER interactive_statement_list opt_COMPLETE_COMPLETION | EVAL_COMPILATION_UNIT_PARSER interactive_compilation_unit
;
interactive_compilation_unit : opt_extern_alias_directives opt_using_directives | opt_extern_alias_directives opt_using_directives namespace_or_type_declarations
;
opt_COMPLETE_COMPLETION :  | COMPLETE_COMPLETION
;
documentation_parsing : DOC_SEE doc_cref
;
doc_cref : doc_type_declaration_name opt_doc_method_sig | builtin_types opt_doc_method_sig | builtin_types DOT IDENTIFIER opt_doc_method_sig | doc_type_declaration_name DOT THIS | doc_type_declaration_name DOT THIS OPEN_BRACKET opt_doc_parameters CLOSE_BRACKET | EXPLICIT OPERATOR type opt_doc_method_sig | IMPLICIT OPERATOR type opt_doc_method_sig | OPERATOR overloadable_operator opt_doc_method_sig
;
doc_type_declaration_name : type_declaration_name | doc_type_declaration_name DOT type_declaration_name
;
opt_doc_method_sig :  | OPEN_PARENS opt_doc_parameters CLOSE_PARENS
;
opt_doc_parameters :  | doc_parameters
;
doc_parameters : doc_parameter | doc_parameters COMMA doc_parameter
;
doc_parameter : opt_parameter_modifier parameter_type
;
